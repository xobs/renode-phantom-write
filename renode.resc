# Add this script's path to the global path, so
# we can include files relative to ourselves.
path add $ORIGIN

using sysbus

############### Define the Betrusted SoC ###############
mach create "SoC"
machine LoadPlatformDescriptionFromString 'cpu: CPU.VexRiscv @ sysbus { cpuType: "rv32imac"; privilegeArchitecture: PrivilegeArchitecture.Priv1_10; PerformanceInMips: 120 }'
machine LoadPlatformDescriptionFromString 'uart: UART.LiteX_UART @ sysbus 0xf0004000'
machine LoadPlatformDescriptionFromString 'console: UART.LiteX_UART @ sysbus 0xf0006000'
machine LoadPlatformDescriptionFromString 'spiflash: Memory.MappedMemory @ sysbus 0x20000000 { size: 0x08000000 }'
machine LoadPlatformDescriptionFromString 'trng: Python.PythonPeripheral @ sysbus 0xf001a000 { size: 4096; initable: false; script: "import random; request.value = random.Random().getrandbits(32)" }'

# If the definition is moved from `soc.repl`, then this repository works
machine LoadPlatformDescription @soc.repl
#machine LoadPlatformDescriptionFromString 'sram_ext: Memory.MappedMemory @ sysbus 0x40000000 { size: 0x10000000 }'

showAnalyzer uart
showAnalyzer console

# The macro `reset` gets called implicitly when running `machine Reset`
macro reset
"""
    sysbus LoadELF @loader
    sysbus LoadBinary @args.bin 0x40800000
    # Set $a0 to point at the args binary
    cpu SetRegisterUnsafe 10 0x40800000
"""

runMacro $reset

start
